import java.io.*;
import java.lang.*;
import java.math.*;
import java.util.*;

class GFG {
    public static void main(String[] args) throws IOException {
        Scanner sc = new Scanner(System.in);
        int T = sc.nextInt();
        while (T-- > 0) {
            int n = sc.nextInt();
            int a[] = new int[n];
            for (int i = 0; i < n; i++) {
                a[i] = sc.nextInt();
            }
            Solution obj = new Solution();
            boolean ans = obj.isBSTTraversal(a);
            System.out.println(ans ? "True" : "False");
        
System.out.println("~");
}
    }
}

class Solution {
    static boolean isBSTTraversal(int arr[]) {
        return isBST(arr, 0, arr.length - 1, Integer.MIN_VALUE, Integer.MAX_VALUE);
    }
    private static boolean isBST(int arr[], int start, int end, int min, int max) {
        if (start > end) {
            return true;
        }
        int rootValue = arr[start];
        if (rootValue <= min || rootValue >= max) {
            return false;
        }
        int rightSubtreeStart = start + 1;
        while (rightSubtreeStart <= end && arr[rightSubtreeStart] < rootValue) {
            rightSubtreeStart++;
        }
        return isBST(arr, start + 1, rightSubtreeStart - 1, min, rootValue) &&
               isBST(arr, rightSubtreeStart, end, rootValue, max);
    }
}
