import java.util.Scanner;

public class TrieProgram {

    static class TrieNode {
        TrieNode[] children = new TrieNode[26];
        boolean isEndOfWord;

        public TrieNode() {
            isEndOfWord = false;
            for (int i = 0; i < 26; i++)
                children[i] = null;
        }
    }

    static class Trie {
        private final TrieNode root;

        public Trie() {
            root = new TrieNode();
        }

        // Insert a word into the trie
        public void insert(String word) {
            TrieNode node = root;
            for (char ch : word.toCharArray()) {
                int index = ch - 'a';
                if (node.children[index] == null)
                    node.children[index] = new TrieNode();
                node = node.children[index];
            }
            node.isEndOfWord = true;
        }

        // Search for an exact word
        public boolean search(String word) {
            TrieNode node = root;
            for (char ch : word.toCharArray()) {
                int index = ch - 'a';
                if (node.children[index] == null) return false;
                node = node.children[index];
            }
            return node.isEndOfWord;
        }

        // Check if a prefix exists in the trie
        public boolean startsWith(String prefix) {
            TrieNode node = root;
            for (char ch : prefix.toCharArray()) {
                int index = ch - 'a';
                if (node.children[index] == null) return false;
                node = node.children[index];
            }
            return true;
        }
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Trie trie = new Trie();

        System.out.print("Enter number of words to insert: ");
        int n = scanner.nextInt();
        scanner.nextLine();

        System.out.println("Enter words (lowercase only):");
        for (int i = 0; i < n; i++) {
            String word = scanner.nextLine().trim();
            trie.insert(word);
        }

        System.out.print("Enter number of queries: ");
        int q = scanner.nextInt();
        scanner.nextLine();

        System.out.println("Enter queries:");
        for (int i = 0; i < q; i++) {
            String input = scanner.nextLine().trim();
            if (input.startsWith("search ")) {
                String word = input.substring(7);
                System.out.println("Search '" + word + "': " + (trie.search(word) ? "Found" : "Not Found"));
            } else if (input.startsWith("prefix ")) {
                String prefix = input.substring(7);
                System.out.println("Prefix '" + prefix + "': " + (trie.startsWith(prefix) ? "Exists" : "Does Not Exist"));
            } else {
                System.out.println("Invalid query. Use 'search <word>' or 'prefix <prefix>'.");
            }
        }

        scanner.close();
    }
}
Enter number of words to insert: 4
Enter words (lowercase only):
apple
app
banana
bat
Enter number of queries: 5
Enter queries:
search apple
search ape
prefix ba
prefix batm
search bat
Search 'apple': Found
Search 'ape': Not Found
Prefix 'ba': Exists
Prefix 'batm': Does Not Exist
Search 'bat': Found
